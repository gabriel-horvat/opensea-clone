/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../NFTMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsListed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "resellToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    name: "updateListingPrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526658d15e176280006009553480156200001c57600080fd5b50604080518082018252601081526f4d657461766572736520546f6b656e7360801b6020808301918252835180850190945260048452631351551560e21b9084015281519192916200007191600091620000a2565b50805162000087906001906020840190620000a2565b5050600a80546001600160a01b031916331790555062000185565b828054620000b09062000148565b90600052602060002090601f016020900481019282620000d457600085556200011f565b82601f10620000ef57805160ff19168380011785556200011f565b828001600101855582156200011f579182015b828111156200011f57825182559160200191906001019062000102565b506200012d92915062000131565b5090565b5b808211156200012d576000815560010162000132565b600181811c908216806200015d57607f821691505b602082108114156200017f57634e487b7160e01b600052602260045260246000fd5b50919050565b61236a80620001956000396000f3fe60806040526004361061012a5760003560e01c80636352211e116100ab578063ae677aa31161006f578063ae677aa314610313578063b88d4fde14610326578063be9af53614610346578063c87b56dd14610359578063e219fc7514610379578063e985e9c51461038c5761012a565b80636352211e1461028b57806370a08231146102ab57806372b3b620146102cb57806395d89b41146102de578063a22cb465146102f35761012a565b806312e85585116100f257806312e8558514610202578063202e37401461022157806323b872dd1461023657806342842e0e1461025657806345f8fa80146102765761012a565b806301ffc9a71461012f57806306fdde0314610164578063081812fc14610186578063095ea7b3146101be5780630f08efe0146101e0575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611f2b565b6103d5565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b50610179610429565b60405161015b9190612106565b34801561019257600080fd5b506101a66101a1366004611fb9565b6104bb565b6040516001600160a01b03909116815260200161015b565b3480156101ca57600080fd5b506101de6101d9366004611f02565b610548565b005b3480156101ec57600080fd5b506101f561065e565b60405161015b919061208a565b34801561020e57600080fd5b506009545b60405190815260200161015b565b34801561022d57600080fd5b506101f5610812565b34801561024257600080fd5b506101de610251366004611e14565b610a04565b34801561026257600080fd5b506101de610271366004611e14565b610a35565b34801561028257600080fd5b506101f5610a50565b34801561029757600080fd5b506101a66102a6366004611fb9565b610c42565b3480156102b757600080fd5b506102136102c6366004611dc8565b610cb9565b6102136102d9366004611f63565b610d40565b3480156102ea57600080fd5b50610179610d82565b3480156102ff57600080fd5b506101de61030e366004611ec8565b610d91565b6101de610321366004611fb9565b610da0565b34801561033257600080fd5b506101de610341366004611e4f565b610e18565b6101de610354366004611fb9565b610e50565b34801561036557600080fd5b50610179610374366004611fb9565b610fb8565b6101de610387366004611fd1565b611130565b34801561039857600080fd5b5061014f6103a7366004611de2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061040657506001600160e01b03198216635b5e139f60e01b145b8061042157506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b6060600080546104389061226f565b80601f01602080910402602001604051908101604052809291908181526020018280546104649061226f565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682611228565b61052c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061055382610c42565b9050806001600160a01b0316836001600160a01b031614156105c15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610523565b336001600160a01b03821614806105dd57506105dd81336103a7565b61064f5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610523565b6106598383611245565b505050565b6060600061066b60075490565b9050600061067860085490565b600754610685919061222c565b90506000808267ffffffffffffffff8111156106b157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561070a57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816106cf5790505b50905060005b848110156108095730600b6000610728846001612200565b81526020810191909152604001600020600201546001600160a01b031614156107f7576000610758826001612200565b6000818152600b6020908152604091829020825160a0810184528154815260018201546001600160a01b039081169382019390935260028201549092169282019290925260038201546060820152600482015460ff1615156080820152855192935090918590879081106107dc57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526107f2600186612200565b945050505b80610801816122aa565b915050610710565b50935050505090565b6060600061081f60075490565b905060008060005b838110156108825733600b600061083f846001612200565b81526020810191909152604001600020600201546001600160a01b031614156108705761086d600184612200565b92505b8061087a816122aa565b915050610827565b5060008267ffffffffffffffff8111156108ac57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561090557816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816108ca5790505b50905060005b848110156108095733600b6000610923846001612200565b81526020810191909152604001600020600201546001600160a01b031614156109f2576000610953826001612200565b6000818152600b6020908152604091829020825160a0810184528154815260018201546001600160a01b039081169382019390935260028201549092169282019290925260038201546060820152600482015460ff1615156080820152855192935090918590879081106109d757634e487b7160e01b600052603260045260246000fd5b60209081029190910101526109ed600186612200565b945050505b806109fc816122aa565b91505061090b565b610a0e33826112b3565b610a2a5760405162461bcd60e51b8152600401610523906121af565b610659838383611399565b61065983838360405180602001604052806000815250610e18565b60606000610a5d60075490565b905060008060005b83811015610ac05733600b6000610a7d846001612200565b81526020810191909152604001600020600101546001600160a01b03161415610aae57610aab600184612200565b92505b80610ab8816122aa565b915050610a65565b5060008267ffffffffffffffff811115610aea57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610b4357816020015b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181610b085790505b50905060005b848110156108095733600b6000610b61846001612200565b81526020810191909152604001600020600101546001600160a01b03161415610c30576000610b91826001612200565b6000818152600b6020908152604091829020825160a0810184528154815260018201546001600160a01b039081169382019390935260028201549092169282019290925260038201546060820152600482015460ff161515608082015285519293509091859087908110610c1557634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610c2b600186612200565b945050505b80610c3a816122aa565b915050610b49565b6000818152600260205260408120546001600160a01b0316806104215760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610523565b60006001600160a01b038216610d245760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610523565b506001600160a01b031660009081526003602052604090205490565b6000610d50600780546001019055565b6000610d5b60075490565b9050610d673382611535565b610d718185611669565b610d7b81846116f4565b9392505050565b6060600180546104389061226f565b610d9c33838361184a565b5050565b600a546001600160a01b03163314610e135760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79206d61726b6574706c616365206f776e65722063616e20757064617460448201526f32903634b9ba34b73390383934b1b29760811b6064820152608401610523565b600955565b610e2233836112b3565b610e3e5760405162461bcd60e51b8152600401610523906121af565b610e4a84848484611919565b50505050565b6000818152600b6020526040902060030154348114610ed9576040805162461bcd60e51b81526020600482015260248101919091527f506c65617365207375626d6974207468652061736b696e67207072696365206960448201527f6e206f7264657220746f20636f6d706c657465207468652070757263686173656064820152608401610523565b6000828152600b602052604090206002810180546001600160a01b0319908116331790915560048201805460ff1916600190811790915590910180549091169055610f28600880546001019055565b610f33303384611399565b600a546009546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610f6f573d6000803e3d6000fd5b506000828152600b60205260408082206001015490516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015610659573d6000803e3d6000fd5b6060610fc382611228565b6110295760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610523565b600082815260066020526040812080546110429061226f565b80601f016020809104026020016040519081016040528092919081815260200182805461106e9061226f565b80156110bb5780601f10611090576101008083540402835291602001916110bb565b820191906000526020600020905b81548152906001019060200180831161109e57829003601f168201915b5050505050905060006110d960408051602081019091526000815290565b90508051600014156110ed57509050610424565b81511561111f57808260405160200161110792919061201e565b60405160208183030381529060405292505050610424565b6111288461194c565b949350505050565b6000828152600b60205260409020600201546001600160a01b031633146111ac5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79206974656d206f776e65722063616e20706572666f726d20746869736044820152691037b832b930ba34b7b760b11b6064820152608401610523565b60095434146111cd5760405162461bcd60e51b81526004016105239061216b565b6000828152600b6020526040902060048101805460ff19169055600381018290556001810180546001600160a01b03199081163317909155600290910180549091163017905561121d6008611a23565b610d9c333084611399565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061127a82610c42565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006112be82611228565b61131f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610523565b600061132a83610c42565b9050806001600160a01b0316846001600160a01b031614806113655750836001600160a01b031661135a846104bb565b6001600160a01b0316145b8061112857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611128565b826001600160a01b03166113ac82610c42565b6001600160a01b0316146114105760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610523565b6001600160a01b0382166114725760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610523565b61147d600082611245565b6001600160a01b03831660009081526003602052604081208054600192906114a690849061222c565b90915550506001600160a01b03821660009081526003602052604081208054600192906114d4908490612200565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610659565b6001600160a01b03821661158b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610523565b61159481611228565b156115e15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610523565b6001600160a01b038216600090815260036020526040812080546001929061160a908490612200565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610d9c565b61167282611228565b6116d55760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610523565b6000828152600660209081526040909120825161065992840190611ca2565b600081116117445760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c65617374203120776569000000006044820152606401610523565b60095434146117655760405162461bcd60e51b81526004016105239061216b565b6040805160a08101825283815233602080830182815230848601818152606086018881526000608088018181528b8252600b909652979097209551865591516001860180546001600160a01b03199081166001600160a01b0393841617909155925160028701805490941691161790915593516003840155516004909201805460ff1916921515929092179091556117fd9184611399565b604080513381523060208201529081018290526000606082015282907fb640004f1d14576d0c209e240cad0410e0d8c0c33a09375861fbadae2588a98d9060800160405180910390a25050565b816001600160a01b0316836001600160a01b031614156118ac5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610523565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611924848484611399565b61193084848484611a7a565b610e4a5760405162461bcd60e51b815260040161052390612119565b606061195782611228565b6119bb5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610523565b60006119d260408051602081019091526000815290565b905060008151116119f25760405180602001604052806000815250610d7b565b806119fc84611b87565b604051602001611a0d92919061201e565b6040516020818303038152906040529392505050565b805480611a725760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000006044820152606401610523565b600019019055565b60006001600160a01b0384163b15611b7c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611abe90339089908890889060040161204d565b602060405180830381600087803b158015611ad857600080fd5b505af1925050508015611b08575060408051601f3d908101601f19168201909252611b0591810190611f47565b60015b611b62573d808015611b36576040519150601f19603f3d011682016040523d82523d6000602084013e611b3b565b606091505b508051611b5a5760405162461bcd60e51b815260040161052390612119565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611128565b506001949350505050565b606081611bac57506040805180820190915260018152600360fc1b6020820152610424565b8160005b8115611bd65780611bc0816122aa565b9150611bcf9050600a83612218565b9150611bb0565b60008167ffffffffffffffff811115611bff57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c29576020820181803683370190505b5090505b841561112857611c3e60018361222c565b9150611c4b600a866122c5565b611c56906030612200565b60f81b818381518110611c7957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611c9b600a86612218565b9450611c2d565b828054611cae9061226f565b90600052602060002090601f016020900481019282611cd05760008555611d16565b82601f10611ce957805160ff1916838001178555611d16565b82800160010185558215611d16579182015b82811115611d16578251825591602001919060010190611cfb565b50611d22929150611d26565b5090565b5b80821115611d225760008155600101611d27565b600067ffffffffffffffff80841115611d5657611d56612305565b604051601f8501601f19908116603f01168101908282118183101715611d7e57611d7e612305565b81604052809350858152868686011115611d9757600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461042457600080fd5b600060208284031215611dd9578081fd5b610d7b82611db1565b60008060408385031215611df4578081fd5b611dfd83611db1565b9150611e0b60208401611db1565b90509250929050565b600080600060608486031215611e28578081fd5b611e3184611db1565b9250611e3f60208501611db1565b9150604084013590509250925092565b60008060008060808587031215611e64578081fd5b611e6d85611db1565b9350611e7b60208601611db1565b925060408501359150606085013567ffffffffffffffff811115611e9d578182fd5b8501601f81018713611ead578182fd5b611ebc87823560208401611d3b565b91505092959194509250565b60008060408385031215611eda578182fd5b611ee383611db1565b915060208301358015158114611ef7578182fd5b809150509250929050565b60008060408385031215611f14578182fd5b611f1d83611db1565b946020939093013593505050565b600060208284031215611f3c578081fd5b8135610d7b8161231b565b600060208284031215611f58578081fd5b8151610d7b8161231b565b60008060408385031215611f75578182fd5b823567ffffffffffffffff811115611f8b578283fd5b8301601f81018513611f9b578283fd5b611faa85823560208401611d3b565b95602094909401359450505050565b600060208284031215611fca578081fd5b5035919050565b60008060408385031215611fe3578182fd5b50508035926020909101359150565b6000815180845261200a816020860160208601612243565b601f01601f19169290920160200192915050565b60008351612030818460208801612243565b835190830190612044818360208801612243565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061208090830184611ff2565b9695505050505050565b602080825282518282018190526000919060409081850190868401855b828110156120f957815180518552868101516001600160a01b03908116888701528682015116868601526060808201519086015260809081015115159085015260a090930192908501906001016120a7565b5091979650505050505050565b600060208252610d7b6020830184611ff2565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526024908201527f5072696365206d75737420626520657175616c20746f206c697374696e6720706040820152637269636560e01b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612213576122136122d9565b500190565b600082612227576122276122ef565b500490565b60008282101561223e5761223e6122d9565b500390565b60005b8381101561225e578181015183820152602001612246565b83811115610e4a5750506000910152565b600181811c9082168061228357607f821691505b602082108114156122a457634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156122be576122be6122d9565b5060010190565b6000826122d4576122d46122ef565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461233157600080fd5b5056fea2646970667358221220818f59f244c2bca301706752ef8cfbae4fc2c9fc96489ed8cca09c468087225f64736f6c63430008030033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NFTMarketplace";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(overrides || {}) as Promise<NFTMarketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }
  static readonly contractName: "NFTMarketplace";
  public readonly contractName: "NFTMarketplace";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
